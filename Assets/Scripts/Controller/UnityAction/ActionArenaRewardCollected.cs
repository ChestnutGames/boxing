// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using UnityEngine;


public class ActionArenaRewardCollected : LogicAction
{
    
    public override bool ProcessAction()
    {
        if (ActParam == null)
            return false;
        ArenaRewardPop pop = UIManager.Instance.GetWindow<ArenaRewardPop>();
        C2sSprotoType.ara_rnk_reward_collected.response resp = ActParam["resp"] as C2sSprotoType.ara_rnk_reward_collected.response;


        ArenaMgr.Instance.rankRewardList = new List<bool>();
        if (resp.rl != null)
        {
            for (int i = 0; i < resp.rl.Count; i++)
            {
                bool bb = resp.rl[i].collected;
                ArenaMgr.Instance.rankRewardList.Add(bb);
            }
            pop.SetRewared();
        }

        if (resp.props != null)
        {
            for (int i = 0; i < resp.props.Count; i++)
            {
                BagMgr.Instance.AddItemNumById((int)resp.props[i].csv_id, (int)resp.props[i].num); 
            } 
        } 

        //List<ArenaUserData> list = new List<ArenaUserData>();
        //for (int i = 0; i < resp.ara_rmd_list.Count; i++)
        //{
        //    ArenaUserData u = new ArenaUserData();
        //    u.csv_id = (int)resp.ara_rmd_list[i].csv_id;
        //    u.uname = resp.ara_rmd_list[i].uname;
        //    u.total_combat = (int)resp.ara_rmd_list[i].total_combat;
        //    u.ara_rnk = (int)resp.ara_rmd_list[i].ara_rnk;
        //    u.iconid = (int)resp.ara_rmd_list[i].iconid;
        //    list.Add(u);
        //}
        //list = list.OrderBy(a => a.ara_rnk).ToList();
        //ArenaMgr.Instance.arenaList = list;
        EventManager.Trigger<EventArenaRankList>(new EventArenaRankList(ArenaMgr.Instance.arenaList));
        return true;
    }
}
